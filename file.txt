module bin_tree_cmp(
    input [63:0] dataA,
    input [63:0] dataB,
    output reg greater,
    output reg smaller,
    output reg invalid,
    output reg equal
);

    wire [63:0] diff = dataA - dataB;
    reg [5:0] result;

    // Binary tree comparator
    always @* begin
        if (diff[63]) result = 6'b000001;
        else if (diff[62]) result = 6'b000010;
        else if (diff[61]) result = 6'b000100;
        else if (diff[60]) result = 6'b001000;
        else if (diff[59]) result = 6'b010000;
        else if (diff[58]) result = 6'b100000;
        else result = 6'b000000;
    end

    // Output comparison result
    always @(result) begin
        case (result)
            6'b000001: begin greater = 1; smaller = 0; equal = 0; invalid = 0; end
            6'b000010: begin greater = 0; smaller = 1; equal = 0; invalid = 0; end
            6'b000100: begin greater = 0; smaller = 1; equal = 0; invalid = 0; end
            6'b001000: begin greater = 0; smaller = 1; equal = 0; invalid = 0; end
            6'b010000: begin greater = 0; smaller = 1; equal = 0; invalid = 0; end
            6'b100000: begin greater = 0; smaller = 1; equal = 0; invalid = 0; end
            default: begin greater = 0; smaller = 0; equal = 1; invalid = 0; end
        endcase
    end

endmodule